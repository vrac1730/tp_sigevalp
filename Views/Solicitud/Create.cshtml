@model SIGEVALP.Models.Solicitud
@{
    ViewBag.Title = "Create";
}

<head>
    <script type="module">
        import * as detail from '../../Scripts/master-detail_validation.js';
        window.detail = detail;
    </script>
</head>

<h2>Registro de Solicitud</h2>
<div>
    @Html.ActionLink("Regresar", "Index")
</div>
<hr />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="form-group">
            <label class="control-label col-md-2">Fecha</label>
            @Html.TextBox("fecha", DateTime.Today.ToString("yyyy-MM-dd"), new { @class = "form-control col-md-3", @disabled = "disabled" })

            <label class="control-label col-md-2">Estado</label>
            <div class="col-md-3">
                <input class="form-control" disabled type="text" value="Pendiente">
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.idUsuario, new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.DropDownList("idUsuario", new SelectList(ViewBag.Usuarios, "id", "Persona.nombre"), "Seleccionar Usuario", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.idUsuario, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Producto</label>
            <div id="id-prod" class="col-md-3">
                @Html.DropDownList("idProducto", new SelectList(ViewBag.Productos, "codigo", "nombre"), "Seleccionar Producto", new { @class = "form-control col-md-3" })
                <span id="span-prod" class="field-validation-error text-danger" text-danger></span>
            </div>

            <label class="control-label col-md-2">Cant. Requerida</label>
            <div id="cant-sol" class="col-md-3">
                <input type="text" id="cantSolicitada" class="form-control" />
                <span id="span-cant" class="field-validation-error text-danger" text-danger></span>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input id="agregar" type="button" value="Agregar" onclick="Agregar();" class="btn btn-default" />
                <input type="submit" value="Registrar" class="btn btn-default" />
            </div>
        </div>

        <div id="div-detalle">
            <span id="span-edicion" class="field-validation-error text-danger" text-danger></span>
            <table id="tabla-detalle" class="table table-hover">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.DetalleSolicitud[0].Producto.codigo)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.DetalleSolicitud[0].Producto.nombre)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.DetalleSolicitud[0].cantSolicitada)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.DetalleSolicitud[0].cantEntregada)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.DetalleSolicitud[0].observacion)
                        </th>
                        <th>Opciones</th>
                    </tr>
                </thead>
                <tbody id="tabla-cuerpo">
                </tbody>
            </table>
            <div id="detalle-input"></div>
        </div>
    </div>

    <h4>Productos Sugeridos:</h4>
    <table class="table table-hover">
        <thead>
            <tr>
                <th>Código</th>
                <th>Producto</th>
                <th>Marca</th>
                <th>Stock Mínimo</th>
                <th>Stock Máximo</th>
                <th>Cantidad</th>
                <th>Observación</th>
            </tr>
        </thead>
        <tbody>
        @foreach (var item in ViewData["ProductosA"] as IEnumerable<SIGEVALP.Models.ProductoxAlmacen>)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Producto.codigo)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Producto.nombre)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Producto.marca)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.stock_min)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.stock_max)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.cantidad)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Producto.Alerta.nombre)
                </td>
            </tr>
        }
        </tbody>
    </table>
}

<script>
    var n = 0;
    let body = document.getElementById("tabla-cuerpo");
    let div_detalle_input = document.getElementById("detalle-input");
    function Agregar() {
        //obtenemos valores de elementos
        let quantity = document.getElementById("cantSolicitada");
        let selectElement = document.getElementById("idProducto");
        let nameElement = selectElement.options[selectElement.selectedIndex].text;
        let valueElement = selectElement.options[selectElement.selectedIndex].value;
        let id = detail.GetId(valueElement);

        let valid = document.getElementById("span-prod");
        let valcant = document.getElementById("span-cant");

        if (!valueElement || !quantity.value) {
            valid.innerHTML = detail.EqualsZero(id);
            valcant.innerHTML = detail.EmptyOrMinor(quantity.value);
        }
        else if (quantity.value < 0) {
            valid.innerHTML = "";
            valcant.innerHTML = detail.LessThanZero(quantity.value);
        }
        else {
            valid.innerHTML = "";
            valcant.innerHTML = "";
            //crear filas
            let tr = document.createElement("tr");
            body.appendChild(tr);
            tr.id = n;
            //celdas
            detail.createTd(valueElement, tr);
            detail.createTd(nameElement, tr);
            detail.createTd(quantity.value, tr);
            detail.createTd(0, tr);
            detail.createTd("Pendiente", tr);
            //botones 
            let tdopccion = document.createElement("td");
            tr.appendChild(tdopccion);
            detail.createButton("Editar", tdopccion, function () { Editar(this) });
            detail.createButton("Eliminar", tdopccion, function () { Eliminar(this) });
            
            //crear div para inputs
            let detalle_input = document.createElement("div");
            detalle_input.id = "input-" + n;
            div_detalle_input.appendChild(detalle_input);
            //crear elementos input
            detail.createInput(n, "DetalleSolicitud", "idProducto", id, detalle_input);
            detail.createInput(n, "DetalleSolicitud", "cantSolicitada", quantity.value, detalle_input);
            detail.createInput(n, "DetalleSolicitud", "cantEntregada", 0, detalle_input);
        
            selectElement.value = "";
            quantity.value = "";
            n++;
        }
    }

    var enEdicion = false;
    let valedicion = document.getElementById("span-edicion");
    function Editar(nodo) {
        if (enEdicion == false) {
            let td = nodo.parentNode;
            let tr = td.parentNode;
            let nodostr = tr.getElementsByTagName("td");

            let tdid = nodostr[0].innerHTML;
            let tdnombre = nodostr[1].innerHTML;
            let tdrequerido = nodostr[2].innerHTML;
            let tdentregado = nodostr[3].innerHTML;
            let tdalerta = nodostr[4].innerHTML;
            let opccionId = "tdopccion-" + detail.GetId(tdid);
            console.log(tdid);
            console.log(tdnombre);
            console.log(tdrequerido);
            console.log(tdentregado);
            console.log(tdalerta);

            let nuevotd = '<td>' + tdid + '</td>' + '<td>' + tdnombre + '</td>' +
                '<td>' + '<input id = "tdCant" type = "text" value = "' + tdrequerido + '"size = "7">' +
                '<span id="span-detalle-cantidad" class="field-validation-error text-danger"></span>' + '</td>' +
                '<td>' + tdentregado + '</td>' +
                '<td>' + tdalerta + '</td>' +
                '<td id = "' + opccionId + '"></td>';
            tr.innerHTML = nuevotd;

            let tdopccion = document.getElementById(opccionId);
            detail.createButton("Aceptar", tdopccion, function () { Aceptar(this) });
            detail.createButton("Cancelar", tdopccion, function () { Cancelar(this) });

            enEdicion = true;
        }
        else {
            valedicion.innerHTML = "Termine de editar un detalle. Para continuar...";
        }
    }
    function Aceptar(nodo) {
        let td = nodo.parentNode;
        let tr = td.parentNode;
        let nodostr = tr.getElementsByTagName("td");        
        let tdid = nodostr[0].innerHTML;
        let tdnombre = nodostr[1].innerHTML;
        let tdentregado = nodostr[3].innerHTML;
        let tdalerta = nodostr[4].innerHTML;        
        //si son símbolos
        //si cantidad es fraccion
        let td_input_cant = document.getElementById("tdCant");
        let valcant = document.getElementById("span-detalle-cantidad");        

        if (!td_input_cant.value) {
            valcant.innerHTML = detail.EmptyOrMinor(td_input_cant.value);
        }
        else if (td_input_cant.value < 0) {
            valcant.innerHTML = detail.LessThanZero(td_input_cant.value);
        }
        else {
            enEdicion = false;
            valedicion.innerHTML = "";
            
            let opccionId = "tdopccion-" + detail.GetId(tdid);            

            //reemplazar data de inputs a celdas        
            let nuevotd = '<td>' + tdid + '</td>' + '<td>' + tdnombre + '</td>' +
                '<td>' + td_input_cant.value + '</td>' +
                '<td>' + tdentregado + '</td>' +
                '<td>' + tdalerta + '</td>' +
                '<td id = "' + opccionId + '"></td>';
            tr.innerHTML = nuevotd;

            let tdopccion = document.getElementById(opccionId);
            detail.createButton("Editar", tdopccion, function () { Editar(this) });
            detail.createButton("Eliminar", tdopccion, function () { Eliminar(this) });
            
            //modificar elementos inputs
            let in_detalle_cantidad = document.getElementById("DetalleSolicitud[" + tr.id + "].cantSolicitada");
            in_detalle_cantidad.value = td_input_cant.value;
        }
    }
    function Cancelar(nodo) {
        enEdicion = false;
        valedicion.innerHTML = "";

        let td = nodo.parentNode;
        let tr = td.parentNode;
        let nodostr = tr.getElementsByTagName("td");

        let tdid = nodostr[0].innerHTML;
        let tdnombre = nodostr[1].innerHTML;
        let tdrequerido = document.getElementById("DetalleSolicitud[" + tr.id + "].cantSolicitada");
        let tdentregado = nodostr[3].innerHTML;
        let tdalerta = nodostr[4].innerHTML;
        let opccionId = "tdopccion-" + detail.GetId(tdid);

        let nuevotd = '<td>' + tdid + '</td>' + '<td>' + tdnombre + '</td>' +
            '<td>' + tdrequerido.value + '</td>' +
            '<td>' + tdentregado + '</td>' +
            '<td>' + tdalerta + '</td>' +
            '<td id = "' + opccionId + '"></td>';
        tr.innerHTML = nuevotd;

        let tdopccion = document.getElementById(opccionId);
        detail.createButton("Editar", tdopccion, function () { Editar(this) });
        detail.createButton("Eliminar", tdopccion, function () { Eliminar(this) });
    }
    function Eliminar(nodo) {
        let td = nodo.parentNode;
        let tr = td.parentNode;
        var inputIndex = parseInt(tr.id);
        console.log(div_detalle_input);
        console.log(n);
        console.log(tr.id);
                
        //no eliminar antes de obtener el tr.id
        let deleteinput = document.getElementById("input-" + tr.id);
        div_detalle_input.removeChild(deleteinput);
        let deletetr = document.getElementById(tr.id);
        body.removeChild(deletetr);
        //si hay más de un detalle y la selección no es el ultimo detalle, entonces elimina, reinicia n y ordena
        //si es diferente eliminar y reiniciar
        if (n > 1 && inputIndex != n - 1) {
            for (var i = inputIndex; i < n - 1; i++) {//indice for de acuerdo a selección
                var nextInputId = inputIndex + 1;
                var nextinput = document.getElementById("input-" + nextInputId);
                var nextbody = document.getElementById(nextInputId);
                var input = nextinput.children;
                console.log(nextinput);
                //cambiar id del div y el nombre de inputs
                nextbody.id = inputIndex;
                nextinput.id = "input-" + inputIndex;
                detail.createInputId(input[0], inputIndex, "DetalleSolicitud", "idProducto");
                detail.createInputId(input[1], inputIndex, "DetalleSolicitud", "cantSolicitada");
                detail.createInputId(input[2], inputIndex, "DetalleSolicitud", "cantEntregada");
                inputIndex++;
                console.log(inputIndex);
            }
        }
        n--;
    }  
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}