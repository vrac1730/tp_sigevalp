@model SIGEVALP.Models.Solicitud
@{
    ViewBag.Title = "Create";
}

<head>
    <script type="module">
        import { EmptyOrMinor, EqualsZero, LessThanZero, GetId } from '../../Scripts/master-detail_validation.js';
        window.EmptyOrMinor = EmptyOrMinor
        window.EqualsZero = EqualsZero
        window.LessThanZero = LessThanZero
        window.GetId = GetId
    </script>
</head>

<h2>Registro de Solicitud</h2>
<div>
    @Html.ActionLink("Regresar", "Index")
</div>
<hr />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="form-group">
            <label class="control-label col-md-2">Fecha</label>
            @Html.TextBox("fecha", DateTime.Today.ToString("yyyy-MM-dd"), new { @class = "form-control col-md-3", @disabled = "disabled" })

            <label class="control-label col-md-2">Estado</label>
            <div class="col-md-3">
                <input class="form-control" disabled type="text" value="Pendiente">
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.idUsuario, new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.DropDownList("idUsuario", new SelectList(ViewBag.Usuarios, "id", "Persona.nombre"), "Seleccionar Usuario", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.idUsuario, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Producto</label>
            <div id="id-prod" class="col-md-3">
                @Html.DropDownList("idProducto", new SelectList(ViewBag.Productos, "codigo", "nombre"), "Seleccionar Producto", new { @class = "form-control col-md-3" })
                <span id="span-prod" class="field-validation-error text-danger" text-danger></span>
            </div>

            <label class="control-label col-md-2">Cant. Requerida</label>
            <div id="cant-sol" class="col-md-3">
                <input type="text" id="cantSolicitada" class="form-control" />
                <span id="span-cant" class="field-validation-error text-danger" text-danger></span>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input id="agregar" type="button" value="Agregar" onclick="Agregar();" class="btn btn-default" />
                <input type="submit" value="Registrar" class="btn btn-default" />
            </div>
        </div>

        <div id="div-detalle">
            <table id="tabla-detalle" class="table table-hover">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.DetalleSolicitud[0].Producto.codigo)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.DetalleSolicitud[0].Producto.nombre)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.DetalleSolicitud[0].cantSolicitada)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.DetalleSolicitud[0].cantEntregada)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.DetalleSolicitud[0].observacion)
                        </th>
                    </tr>
                </thead>
                <tbody id="tabla-cuerpo">
                </tbody>
            </table>
        </div>
    </div>

    <h4>Productos Sugeridos:</h4>
    <table class="table table-hover">
        <thead>
            <tr>
                <th>Código</th>
                <th>Producto</th>
                <th>Marca</th>
                <th>Stock Mínimo</th>
                <th>Stock Máximo</th>
                <th>Cantidad</th>
                <th>Observación</th>
            </tr>
        </thead>
        <tbody>
        @foreach (var item in ViewData["ProductosA"] as IEnumerable<SIGEVALP.Models.ProductoxAlmacen>)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Producto.codigo)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Producto.nombre)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Producto.marca)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.stock_min)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.stock_max)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.cantidad)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Producto.Alerta.nombre)
                </td>
            </tr>
        }
        </tbody>
    </table>
}

<script>
    var n = 0;
    function Agregar() {
        //obtenemos valores de elementos
        let quantity = document.getElementById("cantSolicitada");
        let selectElement = document.getElementById("idProducto");
        let nameElement = selectElement.options[selectElement.selectedIndex].text;
        let valueElement = selectElement.options[selectElement.selectedIndex].value;
        let id = GetId(valueElement);
        let body = document.getElementById("tabla-cuerpo");

        let valid = document.getElementById("span-prod");
        let valcant = document.getElementById("span-cant");

        if (!valueElement || !quantity.value) {
            valid.innerHTML = EqualsZero(id);
            valcant.innerHTML = EmptyOrMinor(quantity.value);
        }
        else if (quantity.value < 0) {
            valid.innerHTML = "";
            valcant.innerHTML = LessThanZero(quantity.value);
        }
        else {
            valid.innerHTML = "";
            valcant.innerHTML = "";
            //crear elementos del cuerpo de la tabla
            let tr = document.createElement("tr");
            let tdid = document.createElement("td");
            let tdnombre = document.createElement("td");
            let tdsolicitado = document.createElement("td");
            let tdentregado = document.createElement("td");
            let tdalerta = document.createElement("td");
            //asigna jerarquía de elementos
            tr.appendChild(tdid);
            tr.appendChild(tdnombre);
            tr.appendChild(tdsolicitado);
            tr.appendChild(tdentregado);
            tr.appendChild(tdalerta);
            tdid.innerHTML = valueElement;
            tdnombre.innerHTML = nameElement
            tdsolicitado.innerHTML = quantity.value;
            tdentregado.innerHTML = 0;
            tdalerta.innerHTML = "Pendiente";
            body.appendChild(tr);
            //crear elementos input
            let div = document.getElementById("div-detalle");
            let index = document.createElement("input")
            let idProd = document.createElement("input")
            let cantSol = document.createElement("input")
            let cantEnt = document.createElement("input")
            //asignar valores
            index.name = "DetalleSolicitud.Index";
            index.value = n;
            index.type = "hidden";
            idProd.name = "DetalleSolicitud[" + n + "].idProducto";
            idProd.value = id;
            idProd.type = "hidden";
            cantSol.name = "DetalleSolicitud[" + n + "].cantSolicitada";
            cantSol.value = quantity.value;
            cantSol.type = "hidden";
            cantEnt.name = "DetalleSolicitud[" + n + "].cantEntregada";
            cantEnt.value = 0;
            cantEnt.type = "hidden";
            //asignar jerarquía de elementos
            div.appendChild(index);
            div.appendChild(idProd);
            div.appendChild(cantSol);
            div.appendChild(cantEnt);

            selectElement.value = "";
            quantity.value = "";
            n++;
        }
    }
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}