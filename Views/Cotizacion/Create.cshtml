@model SIGEVALP.Models.Cotizacion
@{
    ViewBag.Title = "Create";
}

<head>
    <script type="module">
        import * as detail from '../../Scripts/master-detail_validation.js';
        window.detail = detail;
    </script>
</head>

<h2>Registrar</h2>
<h4>Cotizacion</h4>
<div>
    @Html.ActionLink("Regresar", "Index")
</div>
<hr />

@*<p>@Url.RequestContext.HttpContext.User.Identity.Name</p>
<p>@Url.RequestContext.HttpContext.Request.Form.Get("Cotizacion.DetalleCotizacion[0].idProducto")</p>
<p>@Url.RequestContext.HttpContext.Request.Form</p>*@

@using (Html.BeginForm("Create", "Cotizacion", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="form-group">
            @Html.LabelFor(model => model.idUsuario, "Cliente", new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.DropDownList("Cotizacion.idUsuario", new SelectList(ViewBag.Usuarios, "id", "Persona.nombre"), "Seleccionar Cliente", new { @class = "form-control" })
                @Html.ValidationMessage("Cotizacion.idUsuario", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.idProveedor, "Proveedor", new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.DropDownList("Cotizacion.idProveedor", new SelectList(ViewBag.Proveedores, "id", "nombre"), "Seleccionar Proveedor", new { @class = "form-control" })
                @Html.ValidationMessage("Cotizacion.idProveedor", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.fecha, new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.TextBox("Fecha", DateTime.Today.ToString("yyyy-MM-dd"), new { @disabled = "disabled", @class = "form-control" })
            </div>

            @Html.LabelFor(model => model.estado, new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.TextBox("Estado", "Pendiente", new { @disabled = "disabled", @class = "form-control" })
            </div>
        </div>
        <br />
        <div class="form-group">
            <div class="form-group">
                <label class="control-label col-md-2">Producto</label>
                <div id="id-prod" class="col-md-3">
                    @Html.DropDownList("idProducto", new SelectList(ViewBag.Productos, "codigo", "nombre"), "Seleccionar Producto", new { @class = "form-control" })
                    <span id="span-prod" class="field-validation-error text-danger" text-danger></span>
                </div>

                <label class="control-label col-md-2">Cantidad</label>
                <div id="cant" class="col-md-3">
                    <input type="text" id="cantidad" class="form-control" />
                    <span id="span-cant" class="field-validation-error text-danger" text-danger></span>
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">Precio</label>
                <div id="pre" class="col-md-3">
                    <input type="text" id="precio" class="form-control" />
                    <span id="span-pre" class="field-validation-error text-danger" text-danger></span>
                </div>

                <label class="control-label col-md-2">% Descuento</label>
                <div id="desc" class="col-md-3">
                    <input type="text" id="descuento" class="form-control" />
                    <span id="span-desc" class="field-validation-error text-danger" text-danger></span>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="button" value="Agregar" onclick="Agregar();" class="btn btn-default" />
                    <input type="submit" value="Registrar" class="btn btn-default" />
                </div>
            </div>
        </div>

        <div id="div-detalle">
            @if (ViewBag.Duplicados != null)
            {
                <span class="field-validation-error text-danger" text-danger>Los siguiente productos ya han sido cotizados para este proveedor:</span>
                foreach (var item in ViewBag.Duplicados)
                {
                    <p class="field-validation-error text-danger">@item</p>
                }
            }
            <span id="span-edicion" class="field-validation-error text-danger" text-danger></span>
            <table id="tabla-detalle" class="table table-hover">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.DetalleCotizacion[0].Producto.codigo)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.DetalleCotizacion[0].Producto.nombre)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.DetalleCotizacion[0].cantidad)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.DetalleCotizacion[0].costo)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.DetalleCotizacion[0].descuento)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.DetalleCotizacion[0].total)
                        </th>
                        <th>Opciones</th>
                    </tr>
                </thead>
                <tbody id="tabla-cuerpo">
                    @if (ViewBag.Duplicados != null)
                    {
                        for (int i = 0; i < Model.DetalleCotizacion.Count; i++)
                        {
                            <tr id="@i">
                                <td>@Model.DetalleCotizacion[i].Producto.codigo</td>
                                <td>@Model.DetalleCotizacion[i].Producto.nombre</td>
                                <td>@Model.DetalleCotizacion[i].cantidad</td>
                                <td>@Model.DetalleCotizacion[i].costo</td>
                                <td>@Model.DetalleCotizacion[i].descuento</td>
                                <td>@Model.DetalleCotizacion[i].total</td>
                                <td>
                                    <input type="button" value="Editar" class="btn btn-default" onclick="Editar(this);">
                                    <input type="button" value="Eliminar" class="btn btn-default" onclick="Eliminar(this);">
                                </td>
                            </tr>
                        }
                    }
                </tbody>
                @{
                    double[] cotizacion_totales = new double[5];
                    if (ViewBag.Duplicados != null)
                    {
                        cotizacion_totales[0] = Model.parcial;
                        cotizacion_totales[1] = Model.descuento;
                        cotizacion_totales[2] = Model.neto;
                        cotizacion_totales[3] = Model.iva;
                        cotizacion_totales[4] = Model.total;
                    }
                    else
                    {
                        cotizacion_totales[0] = 0.00;
                        cotizacion_totales[1] = 0.00;
                        cotizacion_totales[2] = 0.00;
                        cotizacion_totales[3] = 0.00;
                        cotizacion_totales[4] = 0.00;
                    }
                }
                <tr>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td>@Html.DisplayNameFor(n => n.parcial)</td>
                    <td id="td_parcial">@cotizacion_totales[0]</td>
                </tr>
                <tr>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td>@Html.DisplayNameFor(n => n.descuento)</td>
                    <td id="td_descuento">@cotizacion_totales[1]</td>
                </tr>
                <tr>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td>@Html.DisplayNameFor(n => n.neto)</td>
                    <td id="td_neto">@cotizacion_totales[2]</td>
                </tr>
                <tr>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td>@Html.DisplayNameFor(n => n.iva)</td>
                    <td id="td_igv">@cotizacion_totales[3]</td>
                </tr>
                <tr>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td>@Html.DisplayNameFor(n => n.total)</td>
                    <td id="td_total">@cotizacion_totales[4]</td>
                </tr>
            </table>
            <div id="detalle-input">
                @if (ViewBag.Duplicados != null)
                {
                    for (int i = 0; i < Model.DetalleCotizacion.Count; i++)
                    {
                        <div id="input-@i">
                            <input id="Cotizacion.DetalleCotizacion[@i].idProducto"
                                   name="Cotizacion.DetalleCotizacion[@i].idProducto" type="hidden" value="@Model.DetalleCotizacion[i].idProducto">
                            <input id="Cotizacion.DetalleCotizacion[@i].cantidad"
                                   name="Cotizacion.DetalleCotizacion[@i].cantidad" type="hidden" value="@Model.DetalleCotizacion[i].cantidad">
                            <input id="Cotizacion.DetalleCotizacion[@i].costo"
                                   name="Cotizacion.DetalleCotizacion[@i].costo" type="hidden" value="@Model.DetalleCotizacion[i].costo">
                            <input id="Cotizacion.DetalleCotizacion[@i].descuento"
                                   name="Cotizacion.DetalleCotizacion[@i].descuento" type="hidden" value="@Model.DetalleCotizacion[i].descuento">
                            <input id="Cotizacion.DetalleCotizacion[@i].total"
                                   name="Cotizacion.DetalleCotizacion[@i].total" type="hidden" value="@Model.DetalleCotizacion[i].total">
                        </div>
                    }
                }
            </div>
            <input id="in_parcial" name="Cotizacion.parcial" type="hidden" value="@cotizacion_totales[0]">
            <input id="in_descuento" name="Cotizacion.descuento" type="hidden" value="@cotizacion_totales[1]">
            <input id="in_neto" name="Cotizacion.neto" type="hidden" value="@cotizacion_totales[2]">
            <input id="in_iva" name="Cotizacion.iva" type="hidden" value="@cotizacion_totales[3]">
            <input id="in_total" name="Cotizacion.total" type="hidden" value="@cotizacion_totales[4]">
        </div>
    </div>
}

<script>
    var n = 0;
    //document.querySelector('#agregar').addEventListener('click', Agregar)
    let body = document.getElementById("tabla-cuerpo");
    let div_detalle_input = document.getElementById("detalle-input");
    //celdas costos totales
    let td_parcial = document.getElementById("td_parcial");
    let td_descuento = document.getElementById("td_descuento");
    let td_neto = document.getElementById("td_neto");
    let td_igv = document.getElementById("td_igv");
    let td_total = document.getElementById("td_total");
    //inputs costos totales
    let parcial = document.getElementById("in_parcial");
    let descuento_detalle = document.getElementById("in_descuento");
    let neto = document.getElementById("in_neto");
    let iva = document.getElementById("in_iva");
    let total_detalle = document.getElementById("in_total");
    //span en agregar o editar
    let valedicion = document.getElementById("span-edicion");

    function Agregar() {
        //identificamos elementos por id
        let quantity = document.getElementById("cantidad");
        let price = document.getElementById("precio");
        let discount = document.getElementById("descuento");
        let selectElement = document.getElementById("idProducto");
        let nameElement = selectElement.options[selectElement.selectedIndex].text;
        let valueElement = selectElement.options[selectElement.selectedIndex].value;
        let total = quantity.value * price.value;
        let descuento = discount.value * total;
        let id = detail.GetId(valueElement);

        let valid = document.getElementById("span-prod");
        let valcant = document.getElementById("span-cant");
        let valprec = document.getElementById("span-pre");
        let valdesc = document.getElementById("span-desc");
        //evaluar duplicados
        var codDetalleDuplicado = "";
        valedicion.innerHTML = "";
        for (var i = 0; i < body.children.length; i++) {
            var tr = document.getElementById(i);
            if (tr.getElementsByTagName("td")[0].innerHTML == valueElement) 
                codDetalleDuplicado = valueElement;            
        }
        if (codDetalleDuplicado.length > 0) {
            valedicion.innerHTML = "No se puede ingresar producto duplicados. Codigo: " + codDetalleDuplicado;
        }
        else {
            //si son símbolos
            //si cantidad es fraccion
            //validar que el descuento no exceda 1
            valid.innerHTML = detail.EqualsZero(id);
            valcant.innerHTML = detail.EmptyOrMinorOrZero(quantity.value);
            valprec.innerHTML = detail.EmptyOrMinor(price.value);
            valdesc.innerHTML = detail.EmptyOrMinor(discount.value);

            if (id != 0 && valcant.innerHTML == "" && valprec.innerHTML == "" && valdesc.innerHTML == "") {
                valid.innerHTML = "";
                valcant.innerHTML = "";
                valprec.innerHTML = "";
                valdesc.innerHTML = "";
                //crear filas,
                let tr = document.createElement("tr");
                body.appendChild(tr);
                tr.id = n;
                //celdas,
                detail.createTd(valueElement, tr);
                detail.createTd(nameElement, tr);
                detail.createTd(quantity.value, tr);
                detail.createTd(price.value, tr);
                detail.createTd(descuento, tr);
                detail.createTd(total, tr);
                //y botones de la tabla
                let tdopccion = document.createElement("td");
                tr.appendChild(tdopccion);
                detail.createButton("Editar", tdopccion, function () { Editar(this) });
                detail.createButton("Eliminar", tdopccion, function () { Eliminar(this) });
                //celdas costos totales
                td_parcial.innerHTML = parseFloat(td_parcial.innerHTML) + total;
                td_descuento.innerHTML = parseFloat(td_descuento.innerHTML) + descuento;
                td_neto.innerHTML = parseFloat(td_parcial.innerHTML) - parseFloat(td_descuento.innerHTML);
                td_igv.innerHTML = 0 * parseFloat(td_neto.innerHTML);
                td_total.innerHTML = parseFloat(td_neto.innerHTML) + parseFloat(td_igv.innerHTML);

                //crear div para inputs
                let detalle_input = document.createElement("div");
                detalle_input.id = "input-" + n;
                div_detalle_input.appendChild(detalle_input);
                //crear inputs detalles
                detail.createInput(n, "Cotizacion.DetalleCotizacion", "idProducto", id, detalle_input);
                detail.createInput(n, "Cotizacion.DetalleCotizacion", "cantidad", quantity.value, detalle_input);
                detail.createInput(n, "Cotizacion.DetalleCotizacion", "costo", price.value, detalle_input);
                detail.createInput(n, "Cotizacion.DetalleCotizacion", "descuento", descuento, detalle_input);
                detail.createInput(n, "Cotizacion.DetalleCotizacion", "total", total, detalle_input);
                //inputs costos totales
                parcial.value = td_parcial.innerHTML;
                descuento_detalle.value = td_descuento.innerHTML;
                neto.value = td_neto.innerHTML;
                iva.value = td_igv.innerHTML;
                total_detalle.value = td_total.innerHTML;

                //limpiar inputs al agregar detalles
                selectElement.value = "";
                quantity.value = "";
                price.value = "";
                discount.value = "";
                n++;
            }
        }     
    }

    var enEdicion = false;
    function Editar(nodo) {
        if (enEdicion == false) {
            let td = nodo.parentNode;
            let tr = td.parentNode;
            let nodostr = tr.getElementsByTagName("td");

            let tdid = nodostr[0].innerHTML;
            let tdnombre = nodostr[1].innerHTML;
            let tdcantidad = nodostr[2].innerHTML;
            let tdcosto = nodostr[3].innerHTML;
            let tddescuento = nodostr[4].innerHTML;
            let tdtotal = nodostr[5].innerHTML;
            let opccionId = "tdopccion-" + detail.GetId(tdid);
            console.log(tdid);
            console.log(tdnombre);
            console.log(tdcantidad);
            console.log(tdcosto);
            console.log(tddescuento);
            console.log(tdtotal);

            let nuevotd = '<td>' + tdid + '</td>' + '<td>' + tdnombre + '</td>' +
                '<td>' + '<input id = "tdCant" type = "text" value = "' + tdcantidad + '"size = "7">' +
                '<span id="span-detalle-cantidad" class="field-validation-error text-danger"></span>' + '</td>' +
                '<td>' + '<input id = "tdCost" type = "text" value = "' + tdcosto + '"size = "7">' +
                '<span id="span-detalle-precio" class="field-validation-error text-danger"></span>' + '</td>' +
                '<td>' + '<input id = "tdDesc" type = "text" value = "' + tddescuento + '"size = "7">' +
                '<span id="span-detalle-descuento" class="field-validation-error text-danger"></span>' + '</td>' +
                '<td>' + tdtotal + '</td>' +
                '<td id = "' + opccionId + '"></td>';
            tr.innerHTML = nuevotd;

            let tdopccion = document.getElementById(opccionId);
            detail.createButton("Aceptar", tdopccion, function () { Aceptar(this) });
            detail.createButton("Cancelar", tdopccion, function () { Cancelar(this) });

            enEdicion = true;
        }
        else {
            valedicion.innerHTML = "Termine de editar un detalle. Para continuar...";
        }
    }
    function Aceptar(nodo) {
        let td = nodo.parentNode;
        let tr = td.parentNode;
        let nodostr = tr.getElementsByTagName("td");
        let tdid = nodostr[0].innerHTML;
        let tdnombre = nodostr[1].innerHTML;
        let tdtotal = nodostr[5].innerHTML;
        //validar que el descuento no exceda 1
        //si son símbolos
        //si cantidad es fraccion
        let td_input_cant = document.getElementById("tdCant");
        let td_input_cost = document.getElementById("tdCost");
        let td_input_desc = document.getElementById("tdDesc");
        let valcant = document.getElementById("span-detalle-cantidad");
        let valprec = document.getElementById("span-detalle-precio");
        let valdesc = document.getElementById("span-detalle-descuento");

        valcant.innerHTML = detail.EmptyOrMinorOrZero(td_input_cant.value);
        valprec.innerHTML = detail.EmptyOrMinor(td_input_cost.value);
        valdesc.innerHTML = detail.EmptyOrMinor(td_input_desc.value);

        if (valcant.innerHTML == "" || valprec.innerHTML == "" || valdesc.innerHTML == "") {
            enEdicion = false;
            valedicion.innerHTML = "";

            let total = td_input_cant.value * td_input_cost.value;
            let opccionId = "tdopccion-" + detail.GetId(tdid);
            var descuento = td_input_desc.value / tdtotal;
            //descuento no mayor a 1
            if (td_input_desc.value < 1) {
                descuento = td_input_desc.value * total;
            }
            if (descuento < 1) {
                descuento *= total;
            }
            //span descuento

            //reemplazar data de inputs a celdas
            let nuevotd = '<td>' + tdid + '</td>' + '<td>' + tdnombre + '</td>' +
                '<td>' + td_input_cant.value + '</td>' +
                '<td>' + td_input_cost.value + '</td>' +
                '<td>' + descuento + '</td>' +
                '<td>' + total + '</td>' +
                '<td id = "' + opccionId + '"></td>';
            tr.innerHTML = nuevotd;

            let tdopccion = document.getElementById(opccionId);
            detail.createButton("Editar", tdopccion, function () { Editar(this) });
            detail.createButton("Eliminar", tdopccion, function () { Eliminar(this) });
            //celdas costos totales
            td_parcial.innerHTML = parseFloat(td_parcial.innerHTML) - tdtotal + total;
            td_descuento.innerHTML = parseFloat(td_descuento.innerHTML) - td_input_desc.getAttribute("value") + descuento;
            td_neto.innerHTML = parseFloat(td_parcial.innerHTML) - parseFloat(td_descuento.innerHTML);
            td_igv.innerHTML = 0 * parseFloat(td_neto.innerHTML);
            td_total.innerHTML = parseFloat(td_neto.innerHTML) + parseFloat(td_igv.innerHTML);
            //inputs costos totales
            parcial.value = td_parcial.innerHTML;
            descuento_detalle.value = td_descuento.innerHTML;
            neto.value = td_neto.innerHTML;
            iva.value = td_igv.innerHTML;
            total_detalle.value = td_total.innerHTML;
            //modificar elementos inputs
            let in_detalle_cantidad = document.getElementById("Cotizacion.DetalleCotizacion[" + tr.id + "].cantidad");
            let in_detalle_costo = document.getElementById("Cotizacion.DetalleCotizacion[" + tr.id + "].costo");
            let in_detalle_descuento = document.getElementById("Cotizacion.DetalleCotizacion[" + tr.id + "].descuento");
            let in_detalle_total = document.getElementById("Cotizacion.DetalleCotizacion[" + tr.id + "].total");
            in_detalle_cantidad.value = td_input_cant.value;
            in_detalle_costo.value = td_input_cost.value;
            in_detalle_descuento.value = descuento;
            in_detalle_total.value = total;
        }
    }
    function Cancelar(nodo) {
        enEdicion = false;
        valedicion.innerHTML = "";

        let td = nodo.parentNode;
        let tr = td.parentNode;
        let nodostr = tr.getElementsByTagName("td");

        let tdid = nodostr[0].innerHTML;
        let tdnombre = nodostr[1].innerHTML;
        let tdcantidad = document.getElementById("Cotizacion.DetalleCotizacion[" + tr.id + "].cantidad");
        let tdcosto = document.getElementById("Cotizacion.DetalleCotizacion[" + tr.id + "].costo");
        let tddescuento = document.getElementById("Cotizacion.DetalleCotizacion[" + tr.id + "].descuento");
        let tdtotal = tdcantidad.value * tdcosto.value;
        let opccionId = "tdopccion-" + detail.GetId(tdid);

        let nuevotd = '<td>' + tdid + '</td>' + '<td>' + tdnombre + '</td>' +
            '<td>' + tdcantidad.value + '</td>' +
            '<td>' + tdcosto.value + '</td>' +
            '<td>' + tddescuento.value + '</td>' +
            '<td>' + tdtotal + '</td>' +
            '<td id = "' + opccionId + '"></td>';
        tr.innerHTML = nuevotd;

        let tdopccion = document.getElementById(opccionId);
        detail.createButton("Editar", tdopccion, function () { Editar(this) });
        detail.createButton("Eliminar", tdopccion, function () { Eliminar(this) });
    }
    function Eliminar(nodo) {
        let td = nodo.parentNode;
        let tr = td.parentNode;
        var inputIndex = parseInt(tr.id);
        console.log(div_detalle_input);
        console.log("n: "+n);
        console.log("id eliminado: "+tr.id);
        //Definir n para detalles ya registrados en otra cotización
        n = body.children.length;
        console.log("body: "+body.children.length);

        let nodostr = tr.getElementsByTagName("td");
        let tddescuento = nodostr[4].innerHTML;
        let tdtotal = nodostr[5].innerHTML;
        //celdas costos totales
        td_parcial.innerHTML = parseFloat(td_parcial.innerHTML) - tdtotal;
        td_descuento.innerHTML = parseFloat(td_descuento.innerHTML) - tddescuento;
        td_neto.innerHTML = parseFloat(td_parcial.innerHTML) - parseFloat(td_descuento.innerHTML);
        td_igv.innerHTML = 0 * parseFloat(td_neto.innerHTML);
        td_total.innerHTML = parseFloat(td_neto.innerHTML) + parseFloat(td_igv.innerHTML);
        //inputs costos totales
        parcial.value = td_parcial.innerHTML;
        descuento_detalle.value = td_descuento.innerHTML;
        neto.value = td_neto.innerHTML;
        iva.value = td_igv.innerHTML;
        total_detalle.value = td_total.innerHTML;
        //no eliminar antes de obtener el tr.id
        let deleteinput = document.getElementById("input-" + tr.id);
        div_detalle_input.removeChild(deleteinput);
        let deletetr = document.getElementById(tr.id);
        body.removeChild(deletetr);
        //si hay más de un detalle y la selección no es el ultimo detalle, entonces elimina, reinicia n y ordena
        //si es diferente eliminar y reiniciar
        if (n > 1 && inputIndex != n - 1) {
            for (var i = inputIndex; i < n - 1; i++) {//indice for de acuerdo a selección
                var nextInputId = inputIndex + 1;
                var nextinput = document.getElementById("input-" + nextInputId);
                var nextbody = document.getElementById(nextInputId);
                var input = nextinput.children;
                console.log(nextinput);
                //cambiar id del div y el nombre de inputs
                nextbody.id = inputIndex;
                nextinput.id = "input-" + inputIndex;
                detail.createInputId(input[0], inputIndex, "Cotizacion.DetalleCotizacion", "idProducto");
                detail.createInputId(input[1], inputIndex, "Cotizacion.DetalleCotizacion", "cantidad");
                detail.createInputId(input[2], inputIndex, "Cotizacion.DetalleCotizacion", "costo");
                detail.createInputId(input[3], inputIndex, "Cotizacion.DetalleCotizacion", "descuento");
                detail.createInputId(input[4], inputIndex, "Cotizacion.DetalleCotizacion", "total");
                inputIndex++;
                console.log(inputIndex);
            }
        }
        n--;
    }
</script>
