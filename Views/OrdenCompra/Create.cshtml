
@model SIGEVALP.Models.OrdenCompra

@{
    ViewBag.Title = "Create";
}
<head>
    <script type="module">
        import { EmptyOrMinor, EqualsZero, LessThanZero } from '../../Scripts/master-detail_validation.js';
        window.EmptyOrMinor = EmptyOrMinor
        window.EqualsZero = EqualsZero
        window.LessThanZero = LessThanZero
    </script>
</head>

<h2>Registro de Orden</h2>
<div>
    @Html.ActionLink("Regresar", "Index")
</div>
<hr />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">        
        @if (Url.RequestContext.RouteData.Values.ContainsKey("id") == false)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Proveedor.nombre, "Proveedor", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.DropDownList("idProveedor", null, "Seleccione Proveedor", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.idProveedor, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Seleccionar" class="btn btn-default" />
                </div>
            </div>
        }
        else
        {
            <input id="idProveedor" name="idProveedor" type="hidden" value="@Url.RequestContext.RouteData.Values["id"]">
            <div class="form-group">
                @Html.LabelFor(model => model.Usuario.username, "Usuario", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.DropDownList("idUsuario", null, "Seleccione Usuario", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.idUsuario, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.fechaOrden, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.TextBox("fechaOrden", DateTime.Today.ToString("yyyy-MM-dd"), new { @class = "form-control", @disabled = "disabled" })
                    @Html.ValidationMessageFor(model => model.fechaOrden, "", new { @class = "text-danger" })
                </div>

                @Html.LabelFor(model => model.fechaPago, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.TextBox("fechaPago", DateTime.Today.AddDays(5).ToString("yyyy-MM-dd"), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.fechaPago, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-2">Producto</label>
                <div id="id-prod" class="col-md-3">
                    @Html.DropDownList("idProducto", null, "Seleccionar Producto", htmlAttributes: new { @class = "form-control col-md-3" })
                    <span id="span-prod" class="field-validation-error text-danger" text-danger></span>
                </div>
                <label class="control-label col-md-2">Cantidad</label>
                <div id="cant-rec" class="col-md-3">
                    <input type="text" id="cantidad" class="form-control" />
                    <span id="span-cant" class="field-validation-error text-danger" text-danger></span>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input id="agregar" type="button" value="Agregar" onclick="Agregar(); return false;" class="btn btn-default" />
                    <input type="submit" value="Registrar" class="btn btn-default" />
                </div>
            </div>

            <div id="div-detalle">
                <table id="tabla-detalle" class="table table-hover">
                    <thead>
                        <tr>
                            <th>Id</th>
                            <th>Producto</th>
                            <th>Cantidad</th>
                            <th>Recibido</th>
                            <th>Observación</th>
                        </tr>
                    </thead>
                    <tbody id="tabla-cuerpo">
                    </tbody>
                </table>
            </div>
        }
    </div>
}

<script>
    var n = 0;
    function Agregar() {
        //obtenemos valores de elementos
        let quantity = document.getElementById("cantidad");
        let selectElement = document.getElementById("idProducto");
        let nameElement = selectElement.options[selectElement.selectedIndex].text;
        let valueElement = selectElement.options[selectElement.selectedIndex].value;
        let body = document.getElementById("tabla-cuerpo");

        let valid = document.getElementById("span-prod");
        let valcant = document.getElementById("span-cant");

        if (!valueElement || !quantity.value) {
            valid.innerHTML = EqualsZero(valueElement);
            valcant.innerHTML = EmptyOrMinor(quantity.value);
        }
        else if (quantity.value < 0) {
            valid.innerHTML = "";
            valcant.innerHTML = LessThanZero(quantity.value);
        }
        else {
            valid.innerHTML = "";
            valcant.innerHTML = "";
            //crear elementos del cuerpo de la tabla
            let tr = document.createElement("tr");
            let tdid = document.createElement("td");
            let tdnombre = document.createElement("td");
            let tdcant = document.createElement("td");
            let tdrecibido = document.createElement("td");
            let tdalerta = document.createElement("td");
            //asigna jerarquía de elementos
            tr.appendChild(tdid);
            tr.appendChild(tdnombre);
            tr.appendChild(tdcant);
            tr.appendChild(tdrecibido);
            tr.appendChild(tdalerta);
            tdid.innerHTML = valueElement;
            tdnombre.innerHTML = nameElement;
            tdcant.innerHTML = quantity.value;
            tdrecibido.innerHTML = 0;
            tdalerta.innerHTML = "En orden";
            body.appendChild(tr);
            //crear elementos input
            let div = document.getElementById("div-detalle");
            let index = document.createElement("input")
            let idProd = document.createElement("input")
            let Cant = document.createElement("input")
            let cantRec = document.createElement("input")
            //asignar valores
            index.name = "DetalleCompras.Index";
            index.value = n;
            index.type = "hidden";
            idProd.name = "DetalleCompras[" + n + "].idProducto";
            idProd.value = valueElement;
            idProd.type = "hidden";
            Cant.name = "DetalleCompras[" + n + "].cantidad";
            Cant.value = quantity.value;
            Cant.type = "hidden";
            cantRec.name = "DetalleCompras[" + n + "].cantidadRecibida";
            cantRec.value = 0;
            cantRec.type = "hidden";
            //asignar jerarquía de elementos
            div.appendChild(index);
            div.appendChild(idProd);
            div.appendChild(Cant);
            div.appendChild(cantRec);

            selectElement.value = "";
            quantity.value = "";
            n++;
        }
    }
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


