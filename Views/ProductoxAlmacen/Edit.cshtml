@model SIGEVALP.Models.ProductoxAlmacen

<h2>Modificar Nivel de Stock</h2>
    
@Html.ActionLink("Regresar", "Index")
<hr />

@using (Html.BeginForm("Edit", "ProductoxAlmacen", FormMethod.Post, new { @id = "form-edit-productoxAlmacen" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.id)

    <div class="form-horizontal">
        <div class="form-group">
            @Html.LabelFor(model => model.Producto.codigo, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Producto.codigo, new { @class = "form-control", @disabled = "disabled" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Producto.nombre, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Producto.nombre, new { @class = "form-control", @disabled = "disabled" })
            </div>
        </div>

          <div class="form-group">
            @Html.LabelFor(model => model.Producto.descripcion, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Producto.descripcion, new { @class = "form-control", @disabled = "disabled" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.stock_min, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.stock_min, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.stock_min, "", new { @class = "text-danger", @id = "span-stock_min" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.stock_max, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.stock_max, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.stock_max, "", new { @class = "text-danger", @id = "span-stock_max" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Producto.Categoria.nombre, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Producto.Categoria.nombre, new { @class = "form-control", @disabled = "disabled" })
            </div>
        </div>

            <div class="form-group">
            @Html.LabelFor(model => model.Producto.marca, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Producto.marca, new { @class = "form-control", @disabled = "disabled" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cantidad, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.cantidad, new { @class = "form-control", @disabled = "disabled" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="Guardar" onclick="ComparaStock();" class="btn btn-warning" />
            </div>
        </div>
    </div>
}
<script>
    function ComparaStock() {
        let min = document.getElementById("stock_min");
        let max = document.getElementById("stock_max");
        let form = document.getElementById("form-edit-productoxAlmacen");
        let span_stock_max = document.getElementById("span-stock_max");
        let span_stock_min = document.getElementById("span-stock_min");
        span_stock_min.innerHTML = "";
        span_stock_max.innerHTML = "";

        let minNoEsNum = isNaN(min.value);
        let maxNoEsNum = isNaN(max.value);

        if (minNoEsNum)
            span_stock_min.innerHTML = "El valor " + min.value + " no es válido para stock mínimo.";

        if (maxNoEsNum) 
            span_stock_max.innerHTML = "El valor " + max.value + " no es válido para stock máximo.";

        if (!minNoEsNum && !maxNoEsNum) {
            console.log(min.value)
            console.log(max.value)

            if (max.value <= min.value)
                span_stock_max.innerHTML = "El nivel de stock no puede ser menor o igual al mínimo.";

            else
                form.submit();  
        }              
    }
</script>
